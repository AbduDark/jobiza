events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Log formats
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen 80;
        server_name localhost;
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";

        # Static files handling for Django
        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
            access_log off;
        }

        # Media files handling
         location /media/ {
             alias /app/media/;
             expires 30d;
             access_log off;
         }
        

        # User Service (Django)
        location /dj-jobizz/ {
            proxy_pass http://user-service:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 75s;
            proxy_read_timeout 300s;
        }

        # Adminer Database Management
        # location /adminer/ {
        #     proxy_pass http://adminer:8080/;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # RabbitMQ Management (uncomment when ready)
        # location /rabbitmq/ {
        #     proxy_pass http://rabbitmq:15672/;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }

        # Health check endpoint
        location /health/ {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
